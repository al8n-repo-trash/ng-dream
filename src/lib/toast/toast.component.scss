@import "varibles";
@import "../core/cdk-style/overlay";

// We want overlays to always appear over user content, so set a baseline
// very high z-index for the overlay container, which is where we create the new
// stacking context for all overlays.
$cdk-z-index-overlay-container: 1000 !default;
$cdk-z-index-overlay: 1000 !default;
$cdk-z-index-overlay-backdrop: 1000 !default;

// Background color for all of the backdrops
$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;

// Default backdrop animation is based on the Material Design swift-ease-out.
$backdrop-animation-duration: 400ms !default;
$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;

@mixin toast-secondary-type-normal ($color) {
  border: 2px solid $color;
  color: $color;
}

@mixin toast-normal {
  .nd-toast-normal {
    @include toast-secondary-type-normal(black);
    color: $nd-font-color-normal;
  }

  .nd-toast-success {
    @include toast-secondary-type-normal($nd-toast-default-success-color);
  }

  .nd-toast-info {
    @include toast-secondary-type-normal($nd-toast-default-info-color);
  }

  .nd-toast-danger {
    @include toast-secondary-type-normal($nd-toast-default-danger-color);
  }

  .nd-toast-primary {
    @include toast-secondary-type-normal($nd-toast-default-primary-color);
  }

  .nd-toast-warning {
    @include toast-secondary-type-normal($nd-toast-default-warning-color);
  }

  .nd-toast-forbidden {
    @include toast-secondary-type-normal(rgba($nd-toast-default-forbidden-color, .4));
    color: rgba($nd-toast-default-forbidden-color, .7);
  }
}

@mixin toast-secondary-type-alert ($background, $color) {
  background: $background;
  color: $color;
  box-shadow: 0 2px 3px rgba($color, .08), 0 0 5px rgba($color,.12);
}

@mixin toast-alert {
  .nd-toast-normal {
    @include toast-secondary-type-alert(white, black);
    color: $nd-font-color-normal;
  }

  .nd-toast-success {
    @include toast-secondary-type-alert($nd-toast-default-success-background, $nd-toast-default-success-color);
  }

  .nd-toast-info {
    @include toast-secondary-type-alert($nd-toast-default-info-background, $nd-toast-default-info-color);
  }

  .nd-toast-danger {
    @include toast-secondary-type-alert($nd-toast-default-danger-background, $nd-toast-default-danger-color);
  }

  .nd-toast-primary {
    @include toast-secondary-type-alert($nd-toast-default-primary-background, $nd-toast-default-primary-color);
  }

  .nd-toast-warning {
    @include toast-secondary-type-alert($nd-toast-default-warning-background, $nd-toast-default-warning-color);
  }

  .nd-toast-forbidden {
    @include toast-secondary-type-alert($nd-toast-default-forbidden-background, $nd-toast-default-forbidden-color);
  }
}

::ng-deep {
  @include cdk-overlay;
  .cdk-global-overlay-wrapper {
    height: auto;
    position: relative;
    top: auto;
    left: auto;
  }
}

::ng-deep .cdk-overlay-container {
  // Disable events from being captured on the overlay container.
  pointer-events: none;

  // The container should be the size of the viewport.
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;

  .nd-toast-alert {
    @include toast-alert;
  }

  .nd-toast-normal {
    @include toast-normal;
  }

}

// The overlay-container is an invisible element which contains all individual overlays.
::ng-deep .cdk-overlay-container {
  position: fixed;
  z-index: $cdk-z-index-overlay-container;

  &:empty {
    // Hide the element when it doesn't have any child nodes. This doesn't
    // include overlays that have been detached, rather than disposed.
    display: none;
  }
}

.nd-toast {
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  margin: 10px auto;
  padding: 10px 20px;
  width: 260px;
  background: #fff;
  border-radius: 4px;

  font: {
    size: 14px;
    family: $nd-global-font-family-1;
    weight: 600;
  }

  .nd-toast-message {
    flex: 1 1 auto;
  }

  nd-icon {
    position: absolute;
    top: 11px;
    right: 10px;
    cursor: pointer;
    font-size: inherit;

    .nd-icon {
      font-size: inherit;
      font-weight: 600;
    }
  }
}




